# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  release:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-documentation:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # permissions
    permissions:
          contents: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          path: main
          fetch-depth: 0
      - name: Check latest release tag (if one exists)
        id: last_release
        uses: InsonusK/get-latest-release@v1.1.0
        with:
          myToken: ${{ github.token }}
          exclude_types: "prerelease,draft"
          view_top: 1
      - name: Check out release tag
        if: ${{ steps.last_release.outputs.tag_name }}
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.last_release.outputs.tag_name }}
          fetch-depth: 0
          path: lastrelease
      - name: switch branch 
        run: |
          cd ${{ github.workspace }}/lastrelease
          git checkout fd1c9ec2f65ccd242061dcf9ba04cbb3c17503c0
      # git checkout -b  ${{ steps.last_release.outputs.tag_name }}
      - name: Print release tag name
        run: |  
          echo "release_tag_name: ${{ steps.last_release.outputs.tag_name }}"
          cd ${{ github.workspace }}/lastrelease
          echo "last release branch:"
          git rev-parse --abbrev-ref HEAD
          cd ${{ github.workspace }}/main
          echo "current branch:"
          git rev-parse --abbrev-ref HEAD
      #- name: Cache Docker images.
      #  uses: ScribeMD/docker-cache@0.3.3
      #  with:
      #    key: docker-${{ runner.os }}
      - name: Create artefact folder
        run: |
          mkdir ${{github.workspace}}/main/artefact
          mkdir ${{github.workspace}}/artefact       
      - name: Run the build process with imbuilder docker
        uses: addnab/docker-run-action@v3
        with:
          image: mvesanen/imbuilder:latest
          options: -v ${{ github.workspace }}/main:/git -v ${{ github.workspace }}/lastrelease:/lastrelease
          run: |
            /docbuild/default-build.sh /git/markdown/main.md /git/schema/inframodel-raw.xsd inframodel.xsd
            mkdir /git/staging
            cp -r /docbuild/staging/. /git/staging 
            git config --global --add safe.directory /lastrelease
            mkdir /lastrelease/staging
            /docbuild/default-build.sh /lastrelease/markdown/main.md
            cp -r /docbuild/staging/. /lastrelease/staging
            wdiff -n -w "<strike>" -x "</strike>" -y "<mark>" -z "</mark>" /lastrelease/staging/main.md /git/staging/main.md > /lastrelease/staging/main.diff
            # diff --new-line-format='==%l==' --old-line-format='~~%l~~' --unchanged-line-format='%L' /lastrelease/staging/main.md /git/staging/main.md > /lastrelease/staging/main.diff
            cd /git
            git log --oneline ${{ steps.last_release.outputs.tag_name }}..HEAD > /lastrelease/staging/git.log
      - name: Copy im.xsd to artefact folder
        run: |
            cp ${{github.workspace}}/main/schema/im.xsd ${{github.workspace}}/artefact/im.xsd
            cp ${{github.workspace}}/main/artefact/*.* ${{github.workspace}}/artefact/
            cp ${{github.workspace}}/lastrelease/staging/main.diff ${{github.workspace}}/artefact/main.diff
            cp ${{github.workspace}}/lastrelease/staging/git.log ${{github.workspace}}/artefact/git.log
      - name: Collect  artefacts 
        uses: actions/upload-artifact@v3
        with:
          name: Inframodel (PDF+XSD)
          path: |
            ${{ github.workspace }}/artefact/Inframodel_DRAFT.pdf
            ${{ github.workspace }}/artefact/*.xsd
            ${{ github.workspace }}/artefact/main.diff
            ${{ github.workspace }}/artefact/git.log
      - name: Release files
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ github.workspace }}/artefact/Inframodel_DRAFT.pdf
            ${{ github.workspace }}/artefact/inframodel.xsd
            ${{ github.workspace }}/artefact/im.xsd
        
