# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  release:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-documentation:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # permissions
    permissions:
          contents: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          path: main
          fetch-depth: 0
      #- name: Cache Docker images.
      #  uses: ScribeMD/docker-cache@0.3.3
      #  with:
      #    key: docker-${{ runner.os }}
      - name: Check latest release
        id: last_release
        uses: mvesanen/get-latest-release@poo
        with:
          myToken: ${{ github.token }}
          exclude_types: "prerelease,draft"
          view_top: 100
          ghRef : ${{ github.ref }}
      - name: Print latest release info
        run: |
          echo "last_release_tag_name: ${{  steps.last_release.outputs.tag_name }}"
          echo "last_release_html_url: ${{  steps.last_release.outputs.html_url }}"
      - name: Check out latest release tag
        if: ${{ steps.last_release.outputs.tag_name }}
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.last_release.outputs.tag_name }}
          fetch-depth: 0
          path: lastrelease
      - name: Switch to latest release tag 
        run: |
          cd ${{ github.workspace }}/lastrelease      
          git checkout -b  ${{ steps.last_release.outputs.tag_name }}
      - name: Make artefact and staging folders
        run: |
          mkdir ${{github.workspace}}/main/artefact
          mkdir ${{github.workspace}}/main/staging
      - name: Run the build process with imbuilder docker
        uses: addnab/docker-run-action@v3
        with:
          image: mvesanen/imbuilder:latest
          options: -v ${{ github.workspace }}/main:/git -v ${{ github.workspace }}/lastrelease:/lastrelease
          run: |  
            echo "Prosessing "raw" schemas ..."
            python /docbuild/moustache_handler.py /git/schema/inframodel-raw.xsd /git/staging/inframodel-raw.xsd ${{steps.last_release.outputs.html_url}}
            python /docbuild/schemaprocessor.py /git/staging/inframodel-raw.xsd /git/artefact/inframodel.xsd
            python /docbuild/moustache_handler.py /git/schema/im-raw.xsd /git/artefact/im.xsd ${{steps.last_release.outputs.html_url}}
            echo "Prosessing intermediate markdown ..."
            cp -rf /git/artefact/im.xsd /git/schema/im.xsd
            cp -rf /git/staging/inframodel-raw.xsd /git/schema/inframodel-raw.xsd
            python /docbuild/moustache_handler.py /git/markdown/main.md /git/staging/main.md ${{steps.last_release.outputs.html_url}}
            echo "Build main pdf document"
            ln -s /git/figures/ /git/staging/figures
            cp /git/figures/logo/* ./
            python /docbuild/make-pdf.py /git/staging/main.md /git/artefact/Inframodel.pdf
            echo "Process latest release markdown and generate diff document"
            git config --global --add safe.directory /lastrelease
            python /docbuild/moustache_handler.py /lastrelease/schema/inframodel-raw.xsd /git/staging/inframodel-raw.xsd ${{steps.last_release.outputs.html_url}}
            python /docbuild/moustache_handler.py /lastrelease/schema/im-raw.xsd /git/staging/im.xsd ${{steps.last_release.outputs.html_url}}
            echo "Prosessing intermediate markdown ..."
            cp -rf /git/staging/im.xsd /lastrelease/schema/im.xsd
            cp -rf /git/staging/inframodel-raw.xsd /lastrelease/schema/inframodel-raw.xsd
            python /docbuild/moustache_handler.py /lastrelease/markdown/main.md /git/staging/inframodel_lastrelease.md ${{steps.last_release.outputs.html_url}}
            python /docbuild/remtrailing.py /git/staging/inframodel_lastrelease.md /git/staging/last.md 
            python /docbuild/remtrailing.py /git/staging/main.md /git/staging/current.md
            wdiff -n -w "\removed{" -x "}" -y "\added{" -z "}" /git/staging/last.md /git/staging/current.md > /git/staging/rawdiff.md
            python /docbuild/fix_diff.py /git/staging/rawdiff.md /git/staging/diff.md /lastrelease /git
            python /docbuild/make-pdf.py /git/staging/diff.md /git/artefact/Differences.pdf
      # /docbuild/default-build.sh /git/markdown/main.md /git/schema/inframodel-raw.xsd inframodel.xsd ${{steps.last_release.outputs.html_url}}
      # - name: Copy im.xsd to artefact folder
      #   run: cp ${{github.workspace}}/schema/im.xsd ${{github.workspace}}/artefact/im.xsd
      - name: Collect  artefacts 
        uses: actions/upload-artifact@v4
        with:
          name: Inframodel package (PDF+XSD)
          path: |
            ${{ github.workspace }}/main/artefact/Inframodel.pdf
            ${{ github.workspace }}/main/artefact/Differences.pdf
            ${{ github.workspace }}/main/artefact/inframodel.xsd
            ${{ github.workspace }}/main/artefact/im.xsd
      - name: Release files
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ github.workspace }}/main/artefact/Inframodel.pdf
            ${{ github.workspace }}/main/artefact/Differences.pdf
            ${{ github.workspace }}/main/artefact/inframodel.xsd
            ${{ github.workspace }}/main/artefact/im.xsd
        
